install packages('maps')
install packages(maps)
library(maps)
install.packages("maps")
library(maps)
about()_
about()
version()
license()
250/24.2
250/22.8
250/33.6
250/15.9
250/31.8
250/30.4
plot(x,y);
plot(x,y);
x < 1..10;
x < {1..10};
x <-1..10;
x <- 110;
y <- 1..10;
plot(x,y);
y <- 110;
plot(x,y);
gps_data <- read.csv("/media/micha/dnd/friday 2/
)
;
gps_data <- read.csv("/media/micha/dnd/friday 2/task 4.csv", header = TRUE, sep = ",");
sort_data <- read.csv("/media/micha/dnd/friday 2/sortlist.csv", header = TRUE, sep = ",");
l <- vector("list", nrow(gps_data));
index <- 1;
for(i in 1:nrow(sort_data))
{
for(b in sort_data$Start[i]:sort_data$End[i])
{
l[[index]] <- b;
index <- index + 1;
}
}
updated_gps <- subset(gps_data, id %in% l);
View(gps_data)
View(sort_data)
View(gps_data)
View(sort_data)
gps_data <- read.csv("/media/micha/dnd/friday 2/task 4.csv", header = TRUE, sep = ",");
View(gps_data)
gps_data <- read.csv("/media/micha/dnd/friday 2/task 4.csv", header = TRUE, sep = ",");
gps_data <- read.csv("/media/micha/dnd/friday 2/task 4.csv", header = TRUE, sep = ",");
sort_data <- read.csv("/media/micha/dnd/friday 2/sortlist.csv", header = TRUE, sep = ",");
l <- vector("list", nrow(gps_data));
index <- 1;
for(i in 1:nrow(sort_data))
{
for(b in sort_data$Start[i]:sort_data$End[i])
{
l[[index]] <- b;
index <- index + 1;
}
}
updated_gps <- subset(gps_data, id %in% l);
View(updated_gps)
updated_gps$activity <- NA;
for(d in 1:nrow(updated_gps))
{
for(e in 1:nrow(sort_data))
{
if(updated_gps$id[d] >= sort_data$Start[e] && updated_gps$id[d] <= sort_data$End[e])
{
updated_gps$activity[d] <- sort_data$Activity[e];
}
}
}
View(updated_gps)
write.csv(updated_gps, file = "/media/micha/dnd/friday 2/sorted_list_task4.csv");
facebook_data <- read.csv(file.choose(), sep = ";");
twitter_data <- read.csv(file.choose(), sep = ";");
View(facebook_data)
View(twitter_data)
facebook_data <- read.csv(file.choose(), sep = ";", header = TRUE);
twitter_data <- read.csv(file.choose(), sep = ";". header = TRUE);
View(facebook_data)
View(twitter_data)
twitter_data <- read.csv(file.choose(), sep = ";". header = TRUE);
twitter_data <- read.csv(file.choose(), sep = ";", header = TRUE);
View(twitter_data)
twitter_data <- read.csv(file.choose(), sep = ";", header = TRUE);
facebook_data <- read.csv(file.choose(), sep = ";", header = TRUE);
View(facebook_data)
unique_users_fb <- unique(facebook_data$username, incomparables = FALSE);
unique_users_fb
unique_users_fb <- unique(facebook_data$username, incomparables = TRUE);
unique_users_fb
unique_users_fb <- unique(facebook_data$type, incomparables = TRUE);
unique_users_fb
unique_users_fb <- unique(facebook_data$type, incomparables = FALSE);
unique_users_fb
unique_users_fb <- unique(facebook_data$type, incomparables = TRUE);
unique_users_fb <- unique(facebook_data$type, incomparables = FALSE);
unique_users_fb <- unique(facebook_data$username, incomparables = FALSE);
unique_users_fb
unique_users_twitters <- unique(twitter_data$tweepname, incomparables = FALSE);
facebook_data$created[1]
facebook_data$created[1].type
facebook_data$created[1]
twitter_data$date[1]
posts_fb <- subset(facebook_data, Type = "Post");
View(posts_fb)
posts_fb <- subset(facebook_data, type = "Post");
posts_fb <- subset(facebook_data, type = 'Post');
View(posts_fb)
posts_fb <- subset(facebook_data, type = 1);
View(posts_fb)
posts_fb <- subset(facebook_data, type = 1111);
posts_fb <- subset(facebook_data, type = 1111);
View(facebook_data)
View(posts_fb)
posts_fb <- subset(facebook_data, type != 1111);
posts_fb <- subset(facebook_data, type != "Comment");
View(posts_fb)
gps_twitter <- subset(twitter_data, georss != NULL);
View(gps_twitter)
gps_twitter <- subset(twitter_data, georss != "");
View(gps_twitter)
gps_twitter <- subset(twitter_data, georss != "" && georss != "0 0");
gps_twitter <- subset(twitter_data, georss != "");
gps_twitter <- subset(gps_twitter, georss != "0 0");
View(gps_twitter)
u_gps <- unique(gps_twitter$georss, incomparables = FALSE);
u_gps
languages_twitter <- unique(twitter_data$language, incomparables = FALSE);
languages_twitter
#tower of monsters in R
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
#cat("Welcome to the endless tower!\npress N for new game or Q to quit.");
mm
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
#cat("Welcome to the endless tower!\npress N for new game or Q to quit.");
plot(c(1,2),c(1,3));
source('~/Documents/Rtest projects/tower/game_script.R')
#cat("Welcome to the endless tower!\npress N for new game or Q to quit.");
#plot(c(1,2),c(1,3));
view(mm);
#cat("Welcome to the endless tower!\npress N for new game or Q to quit.");
#plot(c(1,2),c(1,3));
View(mm);
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
cat("You" amount_of_monsters "encountermonsters...\n");
cat("You" + amount_of_monsters + "encountermonsters...\n");
amount_of_monsters <- dice(rolls = 1, ndice = 1, sides = 6);
amount_of_monsters <- dice.roll(6,1,1);
install.packages("Rdice");
# libraries
library(Rdice);
amount_of_monsters <- dice.roll(6,1,1);
View(amount_of_monsters)
cat("You" + amount_of_monsters$results + "encountermonsters...\n");
cat("You",amount_of_monsters$results,"encountermonsters...\n");
cat("You",as.integer(amount_of_monsters$results),"encountermonsters...\n");
cat("You encounter ",as.integer(amount_of_monsters$results)," monsters...\n");
View(monsterdata)
rndnumbers <- floor(runif(amount_of_monsters$results, min=1, max=nrow(monsterdata)));
rndnumbers <- floor(runif(as.integer(amount_of_monsters$results), min=1, max=nrow(monsterdata)));
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
View(monsters)
for(i in 1:as.integer(amount_of_monsters$results))
{
monsters[i] <- CreatePlayer();
monsters[i]$Name = monsterdata$Name[rndnumbers[i]];
monsters[i]$Level = monsterdata$Level[rndnumbers[i]];
monsters[i]$HP = monsterdata$Hp[rndnumbers[i]];
monsters[i]$AC = monsterdata$AC[rndnumbers[i]];
monsters[i]$Initiative = monsterdata$Initiative[rndnumbers[i]];
monsters[i]$aDice = monsterdata$aDice[rndnumbers[i]];
monsters[i]$nDice = monsterdata$nDice[rndnumbers[i]];
cat("[1] ", monsters[i]$Name, " Lv.", monsters[i]$Level, "\t");
}
WWARNIINGS()
warnings()
#creating monsters
monsters <- vector("list", as.integer(amount_of_monsters$results));
monsters[1] <- CreatePlayer();
#creating monsters
monsters <- vector("list", as.integer(amount_of_monsters$results));
monsters[[1]] <- CreatePlayer();
#creating monsters
monsters <- vector("list", as.integer(amount_of_monsters$results));
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
View(monsters)
monsterdata$Name
#creating monsters
monsters <- vector("list", as.integer(amount_of_monsters$results));
for(i in 1:as.integer(amount_of_monsters$results))
{
monsters[[i]] <- CreatePlayer();
monsters[[i]]$Name =  as.character(monsterdata$Name[rndnumbers[i]]);
monsters[[i]]$Level = monsterdata$Level[rndnumbers[i]];
monsters[[i]]$HP = monsterdata$Hp[rndnumbers[i]];
monsters[[i]]$AC = monsterdata$AC[rndnumbers[i]];
monsters[[i]]$Initiative = monsterdata$Initiative[rndnumbers[i]];
monsters[[i]]$aDice = monsterdata$aDice[rndnumbers[i]];
monsters[[i]]$nDice = monsterdata$nDice[rndnumbers[i]];
cat("[1] ", monsters[[i]]$Name, " Lv.", monsters[[i]]$Level, "\t");
}
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
sort(order, decreasing = TRUE);
order <- vector("integer", (as.integer(amount_of_monsters$results)+1));
source('~/Documents/Rtest projects/tower/game_script.R')
sort(order, decreasing = TRUE);
order <- sort(order, decreasing = TRUE);
View(player)
length(monsters)
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
return gamestate <- 0;
return;
gamestate <- 0;
source('~/Documents/Rtest projects/tower/game_script.R')
dmgRoll <- dice.roll(monsters[[i]]$aDice, monsters[[i]]$nDice,1);
View(dmgRoll)
dmg <- sum(as.integer(dmgRoll$results));
View(dmgRoll)
dmgRoll <- dice.roll(player$aDice, player$nDice,1);
dmg <- sum(as.integer(dmgRoll$results));
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
warning()
warnings()
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
if(is.null(monsters))
{
break;
}
source('~/Documents/Rtest projects/tower/game_script.R')
if(is.null(monsters))
{
cat("You have cleared this floor!\nGood luck on the next one :)\n");
gamestate <- 2;
}
#cleared floor
if(is.null(monsters))
if(is.null(monsters))
{
cat("You have cleared this floor!\nGood luck on the next one :)\n");
gamestate <- 2;
}
is.null(monsters)
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
is.null(player)
source('~/Documents/Rtest projects/tower/game_script.R')
source('~/Documents/Rtest projects/tower/game_script.R')
View(monsterdata)
